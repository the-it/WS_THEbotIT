version: 2.1

# define first all the single commands ... for reuse

restore_cache: &restore_cache
  restore_cache:
    keys:
      - v17-dependencies-{{ .Environment.CIRCLE_BRANCH }}-{{ checksum "requirements.txt" }}-{{ .Environment.CIRCLE_WORKFLOW_WORKSPACE_ID }}
      - v17-dependencies-{{ .Environment.CIRCLE_BRANCH }}-{{ checksum "requirements.txt" }}
      - v17-dependencies-{{ .Environment.CIRCLE_BRANCH }}-

save_cache: &save_cache
  save_cache:
    paths:
      - ./venv
    key: v17-dependencies-{{ .Environment.CIRCLE_BRANCH }}-{{ checksum "requirements.txt" }}-{{ .Environment.CIRCLE_WORKFLOW_WORKSPACE_ID }}

install_dependencies: &install_dependencies
  run:
    name: install dependencies
    command: |
      python3 -m venv venv
      . venv/bin/activate
      make pip3-dev
      pip list

flake8: &flake8
  run:
    name: flake8
    when: always
    command: |
      . venv/bin/activate
      make flake8

bandit: &bandit
  run:
    name: bandit
    when: always
    command: |
      . venv/bin/activate
      make bandit

pycodestyle: &pycodestyle
  run:
    name: pycodestyle
    when: always
    command: |
      . venv/bin/activate
      make pycodestyle

pylint: &pylint
  run:
    name: pylint
    when: always
    command: |
      . venv/bin/activate
      make pylint

safety: &safety
  run:
    name: safety
    when: always
    command: |
      . venv/bin/activate
      make safety

mypy: &mypy
  run:
    name: mypy
    when: always
    command: |
      . venv/bin/activate
      make mypy

run_coverage: &run_coverage
  run:
    name: run coverage
    command: |
      . venv/bin/activate
      make coverage

create_pywikibot_file: &create_pywikibot_file
  run:
    name: create_pywikibot_file
    command: |
      mkdir -p ~/.pywikibot
      echo $PYWIKIBOT_FILE > ~/.pywikibot/user-config.py

run_wikitest: &run_wikitest
  run:
    name: run wikitest
    command: |
      . venv/bin/activate
      make wikitest

run_integrationtest: &run_integrationtest
  run:
    name: run integration test
    command: |
      . venv/bin/activate
      make integrationtest

report_codecov: &report_codecov
  run:
    name: report codecov
    when: always
    command: |
      . venv/bin/activate
      codecov -F unittest

report_codecov_wikitest: &report_codecov_wikitest
  run:
    name: report codecov
    when: always
    command: |
      . venv/bin/activate
      codecov -F wikitest

show_python_version: &show_python_version
  run:
    name: python version
    command: |
      python -c "import sys; print (sys.version)"

dependency_steps: &dependency_steps
  steps:
    - checkout
    - <<: *restore_cache
    - <<: *show_python_version
    - <<: *install_dependencies
    - <<: *save_cache

quality_steps: &quality_steps
  steps:
    - checkout
    - <<: *restore_cache
    - <<: *flake8
    - <<: *pycodestyle
    - <<: *pylint
    - <<: *safety
    - <<: *bandit
    - <<: *mypy

coverage_steps: &coverage_steps
  steps:
    - checkout
    - <<: *restore_cache
    - <<: *show_python_version
    - <<: *run_coverage
    - <<: *report_codecov

wiki_steps: &wiki_steps
  steps:
    - checkout
    - <<: *create_pywikibot_file
    - <<: *restore_cache
    - <<: *show_python_version
    - <<: *run_wikitest
    - <<: *report_codecov_wikitest

nightly_steps: &nightly_steps
  steps:
    - checkout
    - <<: *restore_cache
    - <<: *show_python_version
    - <<: *install_dependencies
    - <<: *save_cache
    - <<: *run_integrationtest
    - <<: *run_wikitest

# job definitions

jobs:
  dependency:
    docker:
      - image: cimg/python:3.11
    working_directory: ~/repo
    <<: *dependency_steps

  quality:
    docker:
      - image: cimg/python:3.11
    working_directory: ~/repo
    <<: *quality_steps

  coverage:
    docker:
      - image: cimg/python:3.11
    working_directory: ~/repo
    <<: *coverage_steps

  wikitest:
    docker:
      - image: cimg/python:3.11
    working_directory: ~/repo
    <<: *wiki_steps

  nightly:
    docker:
      - image: cimg/python:3.11
    working_directory: ~/repo
    <<: *nightly_steps

# dependencies for the workflow

workflows:
  version: 2
  test-and-quality:
    jobs:
      - dependency
      - quality:
          requires:
            - dependency
      - coverage:
          requires:
            - dependency
      - wikitest:
          requires:
            - dependency
  integrationtest:
    triggers:
      - schedule:
          cron: "0 0 * * 0"
          filters:
            branches:
              only:
                - main
    jobs:
      - nightly
